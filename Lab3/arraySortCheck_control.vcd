$date
	Sun Sep 15 13:30:04 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arraySortCheck_control_test $end
$var wire 1 ! sorted $end
$var wire 1 " select_index $end
$var wire 1 # load_input $end
$var wire 1 $ load_index $end
$var wire 1 % inversion_found $end
$var wire 1 & end_of_array $end
$var wire 1 ' done $end
$var reg 5 ( array [4:0] $end
$var reg 1 ) clock $end
$var reg 1 * go $end
$var reg 5 + length [4:0] $end
$var reg 1 , reset $end
$var integer 32 - i [31:0] $end
$scope module circuit $end
$var wire 5 . array [4:0] $end
$var wire 1 ) clk $end
$var wire 1 & end_of_array $end
$var wire 1 % inversion_found $end
$var wire 5 / length [4:0] $end
$var wire 1 , reset $end
$var wire 1 " select_index $end
$var wire 1 # load_input $end
$var wire 1 $ load_index $end
$var wire 5 0 length_minus_1 [4:0] $end
$var wire 32 1 index_alu_in [31:0] $end
$var wire 32 2 b [31:0] $end
$var wire 32 3 array_plus_index_plus_1 [31:0] $end
$var wire 32 4 array_plus_index [31:0] $end
$var wire 32 5 array_alu_in [31:0] $end
$var wire 1 6 a_ne_b_1 $end
$var wire 1 7 a_lt_b_2 $end
$var wire 1 8 a_lt_b_1 $end
$var wire 32 9 a [31:0] $end
$var reg 5 : array_reg [4:0] $end
$var reg 5 ; index_reg [4:0] $end
$var reg 5 < length_reg [4:0] $end
$scope module compareElements $end
$var wire 1 6 ne $end
$var wire 1 8 lt $end
$var wire 32 = B [31:0] $end
$var wire 32 > A [31:0] $end
$upscope $end
$scope module comparelength $end
$var wire 5 ? A [4:0] $end
$var wire 5 @ B [4:0] $end
$var wire 1 A ne $end
$var wire 1 7 lt $end
$upscope $end
$scope module rf $end
$var wire 1 ) clock $end
$var wire 32 B internal_rdData [31:0] $end
$var wire 32 C rdData [31:0] $end
$var wire 5 D rdNum [4:0] $end
$var wire 1 E rdWriteEnable $end
$var wire 1 , reset $end
$var wire 32 F rsData [31:0] $end
$var wire 5 G rsNum [4:0] $end
$var wire 32 H rtData [31:0] $end
$var wire 5 I rtNum [4:0] $end
$var integer 32 J i [31:0] $end
$upscope $end
$upscope $end
$scope module control $end
$var wire 1 K Done_sorted_next $end
$var wire 1 L Done_unsorted_next $end
$var wire 1 M Garbage_next $end
$var wire 1 N Looping_next $end
$var wire 1 O Start_next $end
$var wire 1 ) clock $end
$var wire 1 ' done $end
$var wire 1 & end_of_array $end
$var wire 1 * go $end
$var wire 1 % inversion_found $end
$var wire 1 $ load_index $end
$var wire 1 # load_input $end
$var wire 1 , reset $end
$var wire 1 " select_index $end
$var wire 1 ! sorted $end
$var wire 1 P sStart $end
$var wire 1 Q sLooping $end
$var wire 1 R sGarbage $end
$var wire 1 S sDone_unsorted $end
$var wire 1 T sDone_sorted $end
$scope module fsDone_sorted $end
$var wire 1 ) clk $end
$var wire 1 K d $end
$var wire 1 U enable $end
$var wire 1 V reset $end
$var reg 1 T q $end
$upscope $end
$scope module fsDone_unsorted $end
$var wire 1 ) clk $end
$var wire 1 L d $end
$var wire 1 W enable $end
$var wire 1 X reset $end
$var reg 1 S q $end
$upscope $end
$scope module fsGarbage $end
$var wire 1 ) clk $end
$var wire 1 M d $end
$var wire 1 Y enable $end
$var wire 1 Z reset $end
$var reg 1 R q $end
$upscope $end
$scope module fsLooping $end
$var wire 1 ) clk $end
$var wire 1 N d $end
$var wire 1 [ enable $end
$var wire 1 \ reset $end
$var reg 1 Q q $end
$upscope $end
$scope module fsStart $end
$var wire 1 ) clk $end
$var wire 1 O d $end
$var wire 1 ] enable $end
$var wire 1 ^ reset $end
$var reg 1 P q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0^
1]
0\
1[
0Z
1Y
0X
1W
0V
1U
xT
xS
xR
xQ
xP
0O
0N
1M
0L
0K
b100000 J
bx I
bx H
bx G
bx F
zE
bz D
bz C
bx B
xA
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
x6
b0xxxxx 5
bx 4
bx 3
bx 2
b0xxxxx 1
bx 0
bx /
bx .
bx -
1,
bx +
0*
0)
bx (
x'
x&
x%
x$
x#
x"
x!
$end
#1
b1 I
b0 G
0$
0#
0'
b1 3
b0 4
b0 1
b0 ;
b0 ?
b0 <
b0 5
b0 :
1R
0P
0"
0Q
0!
0T
0S
1)
bz B
#2
0%
06
08
b0 2
b0 =
b0 H
b0 9
b0 >
b0 F
0)
b100000 -
0,
#3
16
18
b1 2
b1 =
b1 H
1)
#4
0M
1O
0&
0)
1*
17
1A
b100 0
b100 @
b101 +
b101 /
b1011 (
b1011 .
#5
1$
1#
0R
1P
1)
#6
0)
#7
b1100 I
b1011 G
b101 <
b1100 3
b1011 4
b1011 5
b1011 :
1)
#8
b1100 2
b1100 =
b1100 H
18
b1011 9
b1011 >
b1011 F
0)
#9
1)
#10
0)
#11
1)
#12
0)
#13
1)
#14
1N
0O
0)
0*
#15
1N
1"
1Q
0P
1)
#16
0)
#17
b1101 I
b1100 G
b1101 3
b1100 4
b1 1
b1 ;
b1 ?
1)
#18
b1101 2
b1101 =
b1101 H
16
18
b1100 9
b1100 >
b1100 F
0)
#19
b1110 I
b1101 G
b1110 3
b1101 4
b10 1
b10 ;
b10 ?
1)
#20
b1110 2
b1110 =
b1110 H
16
18
b1101 9
b1101 >
b1101 F
0)
#21
b1111 I
b1110 G
b1111 3
b1110 4
b11 1
b11 ;
b11 ?
1)
#22
b1111 2
b1111 =
b1111 H
16
18
b1110 9
b1110 >
b1110 F
0)
#23
0N
1K
1&
b10000 I
b1111 G
07
0A
b10000 3
b1111 4
b100 1
b100 ;
b100 ?
1)
#24
b10000 2
b10000 =
b10000 H
16
18
b1111 9
b1111 >
b1111 F
0)
#25
b10001 I
b10000 G
0$
0#
1'
1A
b10001 3
b10000 4
b101 1
b101 ;
b101 ?
0"
0Q
1!
1T
1)
#26
b10001 2
b10001 =
b10001 H
16
18
b10000 9
b10000 >
b10000 F
0)
#27
1)
#28
0)
#29
1)
#30
0)
#31
1)
#32
0)
#33
1)
#34
0)
#35
1)
#36
0K
1O
0)
1*
b10 (
b10 .
#37
1$
1#
0'
1P
0!
0T
1)
#38
0)
#39
0&
b11 I
b10 G
17
b0 1
b0 ;
b0 ?
b11 3
b10 4
b10 5
b10 :
1)
#40
b10 2
b10 =
b10 H
b1 9
b1 >
b1 F
0)
#41
1)
#42
0)
#43
1)
#44
0)
#45
1)
#46
1N
0O
0)
0*
#47
1N
1"
1Q
0P
1)
#48
0)
#49
b100 I
b11 G
b100 3
b11 4
b1 1
b1 ;
b1 ?
1)
#50
b11 2
b11 =
b11 H
16
18
b10 9
b10 >
b10 F
0)
#51
b101 I
b100 G
b101 3
b100 4
b10 1
b10 ;
b10 ?
1)
#52
0N
1L
1%
b10 2
b10 =
b10 H
16
08
b11 9
b11 >
b11 F
0)
#53
b110 I
b101 G
0$
0#
1'
b110 3
b101 4
b11 1
b11 ;
b11 ?
0"
0Q
1S
1)
#54
0%
18
b101 2
b101 =
b101 H
16
b10 9
b10 >
b10 F
0)
#55
1)
#56
0)
#57
1)
#58
0)
#59
1)
#60
0)
#61
1)
#62
0)
#63
1)
#64
0)
#65
1)
#66
0)
#67
1)
#68
0L
1O
1&
0)
1*
07
b10 0
b10 @
b11 +
b11 /
b111 (
b111 .
#69
1$
1#
0'
1P
0S
1)
#70
0)
#71
0&
b1000 I
b111 G
17
b0 1
b0 ;
b0 ?
b11 <
b1000 3
b111 4
b111 5
b111 :
1)
#72
b1000 2
b1000 =
b1000 H
18
b111 9
b111 >
b111 F
0)
#73
1)
#74
0)
#75
1)
#76
0)
#77
1)
#78
1N
0O
0)
0*
#79
1N
1"
1Q
0P
1)
#80
0)
#81
b1001 I
b1000 G
b1001 3
b1000 4
b1 1
b1 ;
b1 ?
1)
#82
b1001 2
b1001 =
b1001 H
16
18
b1000 9
b1000 >
b1000 F
0)
#83
0N
1K
1&
b1010 I
b1001 G
07
0A
b1010 3
b1001 4
b10 1
b10 ;
b10 ?
1)
#84
1L
1%
b110 2
b110 =
b110 H
16
08
b1001 9
b1001 >
b1001 F
0)
#85
b1011 I
b1010 G
0$
0#
1'
1A
b1011 3
b1010 4
b11 1
b11 ;
b11 ?
0"
0Q
1!
1T
1S
1)
#86
0%
18
b111 2
b111 =
b111 H
16
b110 9
b110 >
b110 F
0)
#87
1)
#88
0)
#89
1)
#90
0)
#91
1)
#92
0)
#93
1)
#94
0)
#95
1)
#96
0)
#97
1)
#98
0)
#99
1)
#100
0)
#101
1)
#102
0)
#103
1)
#104
0)
#105
1)
#106
0)
#107
1)
#108
0)
